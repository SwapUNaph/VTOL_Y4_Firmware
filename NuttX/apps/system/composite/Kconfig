#
# For a description of the syntax of this configuration file,
# see the file kconfig-language.txt in the NuttX tools repository.
#

menuconfig SYSTEM_COMPOSITE
	bool "USB Composite Device Commands"
	default n
	depends on LIB_BOARDCTL && USBDEV_COMPOSITE && !KERNEL_BUILD
	select BOARDCTL_USBDEVCTRL
	---help---
		Enable the USB composite class controls.  These controls include:

		conn:  Connect the mass storage device to the host
		disconn:  Disconnect the mass storage device to the host

if SYSTEM_COMPOSITE
if USBMSC_COMPOSITE

config SYSTEM_COMPOSITE_NLUNS
	int "Number of LUNs"
	default 1
	---help---
		Defines the number of logical units (LUNs) exported by the USB
		storage driver.  Each LUN corresponds to one exported block driver
		(or partition of a block driver).  May be 1, 2, or 3.  Default is 1.

config SYSTEM_COMPOSITE_DEVMINOR1
	int "LUN1 Minor Device Number"
	default 0
	---help---
		The minor device number of the block driver for the first LUN. For
		example, N in /dev/mmcsdN.  Used for registering the block driver.
		Default is zero.

config SYSTEM_COMPOSITE_DEVPATH1
	string "LUN1 Device Path"
	default "/dev/mmcsd0"
	---help---
		The full path to the registered block driver.  Default is
		"/dev/mmcsd0"

config SYSTEM_COMPOSITE_DEVMINOR2
	int "LUN2 Minor Device Number"
	default 1
	---help---
		The minor device number of the block driver for the second LUN. For
		example, N in /dev/mmcsdN.  Used for registering the block driver.
		Ignored if SYSTEM_COMPOSITE_NLUNS < 2. Default is one.

config SYSTEM_COMPOSITE_DEVPATH2
	string "LUN2 Device Path"
	default "/dev/mmcsd1"
	---help---
		The full path to the registered block driver.  Ignored if
		SYSTEM_COMPOSITE_NLUNS < 2. Default is "/dev/mmcsd1"

config SYSTEM_COMPOSITE_DEVMINOR3
	int "LUN3 Minor Device Number"
	default 2
	---help---
		The minor device number of the block driver for the third LUN. For
		example, N in /dev/mmcsdN.  Used for registering the block driver.
		Ignored if SYSTEM_COMPOSITE_NLUNS < 2. Default is two.

config SYSTEM_COMPOSITE_DEVPATH3
	string "LUN3 Device Path"
	default "/dev/mmcsd2"
	---help---
		The full path to the registered block driver.  Ignored if
		SYSTEM_COMPOSITE_NLUNS < 2. Default is "/dev/mmcsd2"

endif # USBMSC_COMPOSITE

if CDCACM_COMPOSITE

config SYSTEM_COMPOSITE_TTYUSB
	int "USB serial device minor number"
	default 0
	---help---
		The minor number of the USB serial device. Default is zero
		(corresponding to /dev/ttyUSB0 or /dev/ttyACM0).

config SYSTEM_COMPOSITE_SERDEV
	string "USB serial device path"
	default "/dev/ttyACM0"
	---help---
		The string corresponding to SYSTEM_COMPOSITE_TTYUSB.  If
		SYSTEM_COMPOSITE_TTYUSB is zero, then this would be "/dev/ttyUSB0"
		(for the PL2303 emulation) or "/dev/ttyACM0" (for the CDC/ACM serial
		device).

config SYSTEM_COMPOSITE_BUFSIZE
	int "Serial I/O buffer size"
	default 256
	---help---
		The size of the serial I/O buffer in bytes.  Default 256 bytes.

endif # CDCACM_COMPOSITE

if USBDEV_TRACE || DEBUG_USB

config SYSTEM_COMPOSITE_TRACEINIT
	bool "USB Trace Initialization"
	default n
	---help---
		If USBDEV_TRACE is enabled (or CONFIG_DEBUG_FEATURES and CONFIG_DEBUG_USB),
		then the add-on code will also manage the USB trace output.  The
		amount of trace output can be controlled this configuration value:
		This setting will show USB initialization events

config SYSTEM_COMPOSITE_TRACECLASS
	bool "USB Trace Class"
	default n
	---help---
		If USBDEV_TRACE is enabled (or CONFIG_DEBUG_FEATURES and CONFIG_DEBUG_USB),
		then the add-on code will also manage the USB trace output.  The
		amount of trace output can be controlled this configuration value:
		This setting will show USB class driver events

config SYSTEM_COMPOSITE_TRACETRANSFERS
	bool "USB Trace Transfers"
	default n
	---help---
		If USBDEV_TRACE is enabled (or CONFIG_DEBUG_FEATURES and CONFIG_DEBUG_USB),
		then the add-on code will also manage the USB trace output.  The
		amount of trace output can be controlled this configuration value:
		This setting will show USB data transfer events

config SYSTEM_COMPOSITE_TRACECONTROLLER
	bool "USB Trace Device Controller Events"
	default n
	---help---
		If USBDEV_TRACE is enabled (or CONFIG_DEBUG_FEATURES and CONFIG_DEBUG_USB),
		then the add-on code will also manage the USB trace output.  The
		amount of trace output can be controlled this configuration value:
		This setting will show USB device controller events

config SYSTEM_COMPOSITE_TRACEINTERRUPTS
	bool "USB Trace Device Controller Interrupt Events"
	default n
	---help---
		If USBDEV_TRACE is enabled (or CONFIG_DEBUG_FEATURES and CONFIG_DEBUG_USB),
		then the add-on code will also manage the USB trace output.  The
		amount of trace output can be controlled this configuration value:
		This setting will show USB device controller interrupt-related events.

endif # USBDEV_TRACE || DEBUG_USB

config SYSTEM_COMPOSITE_DEBUGMM
	bool "Memory usage debug"
	default n
	---help---
		Enables some debug tests to check for memory usage and memory leaks.

endif
